version: '3.8'

x-env-front: &front-env-variables
    VITE_APP_URL: http://localhost
    VITE_API_URL: http://api.localhost

x-env-api: &api-env-variables
    APP_DEBUG: "true"
    APP_ENV: dev
    APP_NAME: Profit Center FX TT
    APP_URL: http://api.localhost
    DB_HOST: api-mysql
    DB_DATABASE: app
    DB_USER: app
    DB_PORT: 3306
    DB_PASSWORD: secret
    DB_TABLE_PREFIX: p_

services:

    reverse-proxy:
        image: traefik:v2.9
        command: 
            --api.insecure=true
            --providers.docker=true
            --providers.docker.exposedByDefault=false
            --providers.docker.network=traefik-public
            --entryPoints.web.address=:80
        ports:
            # The HTTP port
            - "80:80"
        networks:
            - traefik-public
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.reverse-proxy.entryPoints=web
            - traefik.http.services.reverse-proxy.loadbalancer.server.port=8080
            - traefik.http.routers.reverse-proxy.rule=Host(`services.traefik.localhost`)
        depends_on:
            - frontend
            - api

    frontend:
       build:
           context: frontend/docker/development/nginx
       depends_on:
           - frontend-node
       networks:
           - traefik-public
           - default           
       labels:
           - traefik.enable=true
           - traefik.docker.network=traefik-public
           - traefik.http.routers.frontend.rule=Host(`localhost`) || Host(`www.localhost`)
           - traefik.http.routers.frontend.entryPoints=web
           - traefik.http.services.frontend.loadbalancer.server.port=80
           - traefik.http.middlewares.frontend-redirect.redirectRegex.regex=^(https?://)www.localhost/(.*)$$
           - traefik.http.middlewares.frontend-redirect.redirectRegex.replacement=$${1}localhost/$${2}
           - traefik.http.middlewares.frontend-redirect.redirectRegex.permanent=true
           - traefik.http.routers.frontend.middlewares=frontend-redirect

    frontend-preview:
       build:
           context: frontend/docker/development/node
       volumes:
           - ./frontend:/app
       command: sh -c "until [ -f ./dist/index.html ] ; do sleep 1 ; done && yarn preview"
       networks:
           - traefik-public
           - default           
       labels:
           - traefik.enable=true
           - traefik.docker.network=traefik-public
           - traefik.http.routers.frontend-preview.rule=Host(`preview.localhost`)
           - traefik.http.routers.frontend-preview.entryPoints=web
           - traefik.http.services.frontend-preview.loadbalancer.server.port=3001

    frontend-node:
       build:
           context: frontend/docker/development/node
       environment:
           <<: *front-env-variables
           WDS_SOCKET_PORT: 0
       volumes:
           - ./frontend:/app
       command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && yarn start"
       tty: true

    frontend-node-cli:
        build:
            context: frontend/docker/development/node-cli
        environment:
            <<: *front-env-variables
        volumes:
            - ./frontend:/app
            - /dev/null:/app/.git

    api:
        build:
            context: api/docker
            dockerfile: development/nginx/Dockerfile
        volumes:
            - ./api:/app
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.api.rule=Host(`api.localhost`)
            - traefik.http.routers.api.entryPoints=web
            - traefik.http.services.api.loadBalancer.server.port=80

    api-php-fpm:
        build:
            context: api/docker
            dockerfile: development/php-fpm/Dockerfile
        environment:
            <<: *api-env-variables
            PHP_IDE_CONFIG: serverName=API
        volumes:
            - ./api:/app
        depends_on:
            - api-mysql

    api-php-cli:
        build:
            context: api/docker
            dockerfile: development/php-cli/Dockerfile
        environment:
            <<: *api-env-variables
        volumes:
            - ./api:/app
            - composer:/root/.composer/cache
        depends_on:
            - api-mysql

    api-mysql:
        build:
            context: api/docker
            dockerfile: development/mysql/Dockerfile
        environment:
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_DATABASE: app
            MYSQL_USER: app
            MYSQL_PASSWORD: secret
        volumes:
            - db:/var/lib/mysql
        ports:
            - "33061:3306"

networks:
    traefik-public:
        name: traefik-public

volumes:
    composer:
    db: